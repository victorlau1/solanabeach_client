/*
Solanabeach Backend API

Solanabeach Backend REST API documentation.  ## Rate limiting Current API rate limit per IP is 100 requests per second.    ## Pagination Most of the endpoints returning array data support pagination. The API uses two types of pagination, depending on the returned data. Some endpoints support both, some are limited to just one type.    ## Supported pagination types ### Offset / limit Offset / limit pagination is the simplest form of pagination supported by the API. Offset parameter represents the number of results to skip before returning the data, and the limit parameter limits the number of returned results.   To prevent overloading the API, all limit params have a max value. Each API endpoint has its own max value.  ### Cursor Cursor pagination is more complex than the offset / limit one, but, it comes naturally for some blockchain data (such as blocks, transactions, token transfers, etc). Cursors contain data like blocknumber, transaction index, ... and they're described on their respective API endpoints. Limit parameter works exactly the same way as it does in the offset / limit pagination.  ## Authentication The public API uses a Bearer OAuth authentication method, and the API key should be provided in the `Authorization` header in each request. API keys are issued on request. 

API version: 0.0.1
Contact: andrej@vgng.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20010Boundaries struct for InlineResponse20010Boundaries
type InlineResponse20010Boundaries struct {
	Start *int32 `json:"start,omitempty"`
	End *int32 `json:"end,omitempty"`
}

// NewInlineResponse20010Boundaries instantiates a new InlineResponse20010Boundaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20010Boundaries() *InlineResponse20010Boundaries {
	this := InlineResponse20010Boundaries{}
	return &this
}

// NewInlineResponse20010BoundariesWithDefaults instantiates a new InlineResponse20010Boundaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20010BoundariesWithDefaults() *InlineResponse20010Boundaries {
	this := InlineResponse20010Boundaries{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *InlineResponse20010Boundaries) GetStart() int32 {
	if o == nil || o.Start == nil {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20010Boundaries) GetStartOk() (*int32, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *InlineResponse20010Boundaries) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *InlineResponse20010Boundaries) SetStart(v int32) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *InlineResponse20010Boundaries) GetEnd() int32 {
	if o == nil || o.End == nil {
		var ret int32
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20010Boundaries) GetEndOk() (*int32, bool) {
	if o == nil || o.End == nil {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *InlineResponse20010Boundaries) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int32 and assigns it to the End field.
func (o *InlineResponse20010Boundaries) SetEnd(v int32) {
	o.End = &v
}

func (o InlineResponse20010Boundaries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20010Boundaries struct {
	value *InlineResponse20010Boundaries
	isSet bool
}

func (v NullableInlineResponse20010Boundaries) Get() *InlineResponse20010Boundaries {
	return v.value
}

func (v *NullableInlineResponse20010Boundaries) Set(val *InlineResponse20010Boundaries) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20010Boundaries) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20010Boundaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20010Boundaries(val *InlineResponse20010Boundaries) *NullableInlineResponse20010Boundaries {
	return &NullableInlineResponse20010Boundaries{value: val, isSet: true}
}

func (v NullableInlineResponse20010Boundaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20010Boundaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


