/*
Solanabeach Backend API

Solanabeach Backend REST API documentation.  ## Rate limiting Current API rate limit per IP is 100 requests per second.    ## Pagination Most of the endpoints returning array data support pagination. The API uses two types of pagination, depending on the returned data. Some endpoints support both, some are limited to just one type.    ## Supported pagination types ### Offset / limit Offset / limit pagination is the simplest form of pagination supported by the API. Offset parameter represents the number of results to skip before returning the data, and the limit parameter limits the number of returned results.   To prevent overloading the API, all limit params have a max value. Each API endpoint has its own max value.  ### Cursor Cursor pagination is more complex than the offset / limit one, but, it comes naturally for some blockchain data (such as blocks, transactions, token transfers, etc). Cursors contain data like blocknumber, transaction index, ... and they're described on their respective API endpoints. Limit parameter works exactly the same way as it does in the offset / limit pagination.  ## Authentication The public API uses a Bearer OAuth authentication method, and the API key should be provided in the `Authorization` header in each request. API keys are issued on request. 

API version: 0.0.1
Contact: andrej@vgng.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WealthWealthDistribution010 struct for WealthWealthDistribution010
type WealthWealthDistribution010 struct {
	Value *string `json:"value,omitempty"`
	Percentage *string `json:"percentage,omitempty"`
	UsdValue *string `json:"usdValue,omitempty"`
}

// NewWealthWealthDistribution010 instantiates a new WealthWealthDistribution010 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWealthWealthDistribution010() *WealthWealthDistribution010 {
	this := WealthWealthDistribution010{}
	return &this
}

// NewWealthWealthDistribution010WithDefaults instantiates a new WealthWealthDistribution010 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWealthWealthDistribution010WithDefaults() *WealthWealthDistribution010 {
	this := WealthWealthDistribution010{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *WealthWealthDistribution010) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution010) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WealthWealthDistribution010) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *WealthWealthDistribution010) SetValue(v string) {
	o.Value = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *WealthWealthDistribution010) GetPercentage() string {
	if o == nil || o.Percentage == nil {
		var ret string
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution010) GetPercentageOk() (*string, bool) {
	if o == nil || o.Percentage == nil {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *WealthWealthDistribution010) HasPercentage() bool {
	if o != nil && o.Percentage != nil {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given string and assigns it to the Percentage field.
func (o *WealthWealthDistribution010) SetPercentage(v string) {
	o.Percentage = &v
}

// GetUsdValue returns the UsdValue field value if set, zero value otherwise.
func (o *WealthWealthDistribution010) GetUsdValue() string {
	if o == nil || o.UsdValue == nil {
		var ret string
		return ret
	}
	return *o.UsdValue
}

// GetUsdValueOk returns a tuple with the UsdValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution010) GetUsdValueOk() (*string, bool) {
	if o == nil || o.UsdValue == nil {
		return nil, false
	}
	return o.UsdValue, true
}

// HasUsdValue returns a boolean if a field has been set.
func (o *WealthWealthDistribution010) HasUsdValue() bool {
	if o != nil && o.UsdValue != nil {
		return true
	}

	return false
}

// SetUsdValue gets a reference to the given string and assigns it to the UsdValue field.
func (o *WealthWealthDistribution010) SetUsdValue(v string) {
	o.UsdValue = &v
}

func (o WealthWealthDistribution010) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Percentage != nil {
		toSerialize["percentage"] = o.Percentage
	}
	if o.UsdValue != nil {
		toSerialize["usdValue"] = o.UsdValue
	}
	return json.Marshal(toSerialize)
}

type NullableWealthWealthDistribution010 struct {
	value *WealthWealthDistribution010
	isSet bool
}

func (v NullableWealthWealthDistribution010) Get() *WealthWealthDistribution010 {
	return v.value
}

func (v *NullableWealthWealthDistribution010) Set(val *WealthWealthDistribution010) {
	v.value = val
	v.isSet = true
}

func (v NullableWealthWealthDistribution010) IsSet() bool {
	return v.isSet
}

func (v *NullableWealthWealthDistribution010) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWealthWealthDistribution010(val *WealthWealthDistribution010) *NullableWealthWealthDistribution010 {
	return &NullableWealthWealthDistribution010{value: val, isSet: true}
}

func (v NullableWealthWealthDistribution010) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWealthWealthDistribution010) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


