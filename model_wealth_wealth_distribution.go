/*
Solanabeach Backend API

Solanabeach Backend REST API documentation.  ## Rate limiting Current API rate limit per IP is 100 requests per second.    ## Pagination Most of the endpoints returning array data support pagination. The API uses two types of pagination, depending on the returned data. Some endpoints support both, some are limited to just one type.    ## Supported pagination types ### Offset / limit Offset / limit pagination is the simplest form of pagination supported by the API. Offset parameter represents the number of results to skip before returning the data, and the limit parameter limits the number of returned results.   To prevent overloading the API, all limit params have a max value. Each API endpoint has its own max value.  ### Cursor Cursor pagination is more complex than the offset / limit one, but, it comes naturally for some blockchain data (such as blocks, transactions, token transfers, etc). Cursors contain data like blocknumber, transaction index, ... and they're described on their respective API endpoints. Limit parameter works exactly the same way as it does in the offset / limit pagination.  ## Authentication The public API uses a Bearer OAuth authentication method, and the API key should be provided in the `Authorization` header in each request. API keys are issued on request. 

API version: 0.0.1
Contact: andrej@vgng.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WealthWealthDistribution struct for WealthWealthDistribution
type WealthWealthDistribution struct {
	Var010 *WealthWealthDistribution010 `json:"0_10,omitempty"`
	Var1150 *WealthWealthDistribution010 `json:"11_50,omitempty"`
	Var51100 *WealthWealthDistribution010 `json:"51_100,omitempty"`
	Rest *WealthWealthDistribution010 `json:"rest,omitempty"`
	Total *WealthWealthDistributionTotal `json:"total,omitempty"`
}

// NewWealthWealthDistribution instantiates a new WealthWealthDistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWealthWealthDistribution() *WealthWealthDistribution {
	this := WealthWealthDistribution{}
	return &this
}

// NewWealthWealthDistributionWithDefaults instantiates a new WealthWealthDistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWealthWealthDistributionWithDefaults() *WealthWealthDistribution {
	this := WealthWealthDistribution{}
	return &this
}

// GetVar010 returns the Var010 field value if set, zero value otherwise.
func (o *WealthWealthDistribution) GetVar010() WealthWealthDistribution010 {
	if o == nil || o.Var010 == nil {
		var ret WealthWealthDistribution010
		return ret
	}
	return *o.Var010
}

// GetVar010Ok returns a tuple with the Var010 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution) GetVar010Ok() (*WealthWealthDistribution010, bool) {
	if o == nil || o.Var010 == nil {
		return nil, false
	}
	return o.Var010, true
}

// HasVar010 returns a boolean if a field has been set.
func (o *WealthWealthDistribution) HasVar010() bool {
	if o != nil && o.Var010 != nil {
		return true
	}

	return false
}

// SetVar010 gets a reference to the given WealthWealthDistribution010 and assigns it to the Var010 field.
func (o *WealthWealthDistribution) SetVar010(v WealthWealthDistribution010) {
	o.Var010 = &v
}

// GetVar1150 returns the Var1150 field value if set, zero value otherwise.
func (o *WealthWealthDistribution) GetVar1150() WealthWealthDistribution010 {
	if o == nil || o.Var1150 == nil {
		var ret WealthWealthDistribution010
		return ret
	}
	return *o.Var1150
}

// GetVar1150Ok returns a tuple with the Var1150 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution) GetVar1150Ok() (*WealthWealthDistribution010, bool) {
	if o == nil || o.Var1150 == nil {
		return nil, false
	}
	return o.Var1150, true
}

// HasVar1150 returns a boolean if a field has been set.
func (o *WealthWealthDistribution) HasVar1150() bool {
	if o != nil && o.Var1150 != nil {
		return true
	}

	return false
}

// SetVar1150 gets a reference to the given WealthWealthDistribution010 and assigns it to the Var1150 field.
func (o *WealthWealthDistribution) SetVar1150(v WealthWealthDistribution010) {
	o.Var1150 = &v
}

// GetVar51100 returns the Var51100 field value if set, zero value otherwise.
func (o *WealthWealthDistribution) GetVar51100() WealthWealthDistribution010 {
	if o == nil || o.Var51100 == nil {
		var ret WealthWealthDistribution010
		return ret
	}
	return *o.Var51100
}

// GetVar51100Ok returns a tuple with the Var51100 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution) GetVar51100Ok() (*WealthWealthDistribution010, bool) {
	if o == nil || o.Var51100 == nil {
		return nil, false
	}
	return o.Var51100, true
}

// HasVar51100 returns a boolean if a field has been set.
func (o *WealthWealthDistribution) HasVar51100() bool {
	if o != nil && o.Var51100 != nil {
		return true
	}

	return false
}

// SetVar51100 gets a reference to the given WealthWealthDistribution010 and assigns it to the Var51100 field.
func (o *WealthWealthDistribution) SetVar51100(v WealthWealthDistribution010) {
	o.Var51100 = &v
}

// GetRest returns the Rest field value if set, zero value otherwise.
func (o *WealthWealthDistribution) GetRest() WealthWealthDistribution010 {
	if o == nil || o.Rest == nil {
		var ret WealthWealthDistribution010
		return ret
	}
	return *o.Rest
}

// GetRestOk returns a tuple with the Rest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution) GetRestOk() (*WealthWealthDistribution010, bool) {
	if o == nil || o.Rest == nil {
		return nil, false
	}
	return o.Rest, true
}

// HasRest returns a boolean if a field has been set.
func (o *WealthWealthDistribution) HasRest() bool {
	if o != nil && o.Rest != nil {
		return true
	}

	return false
}

// SetRest gets a reference to the given WealthWealthDistribution010 and assigns it to the Rest field.
func (o *WealthWealthDistribution) SetRest(v WealthWealthDistribution010) {
	o.Rest = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *WealthWealthDistribution) GetTotal() WealthWealthDistributionTotal {
	if o == nil || o.Total == nil {
		var ret WealthWealthDistributionTotal
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WealthWealthDistribution) GetTotalOk() (*WealthWealthDistributionTotal, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *WealthWealthDistribution) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given WealthWealthDistributionTotal and assigns it to the Total field.
func (o *WealthWealthDistribution) SetTotal(v WealthWealthDistributionTotal) {
	o.Total = &v
}

func (o WealthWealthDistribution) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var010 != nil {
		toSerialize["0_10"] = o.Var010
	}
	if o.Var1150 != nil {
		toSerialize["11_50"] = o.Var1150
	}
	if o.Var51100 != nil {
		toSerialize["51_100"] = o.Var51100
	}
	if o.Rest != nil {
		toSerialize["rest"] = o.Rest
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableWealthWealthDistribution struct {
	value *WealthWealthDistribution
	isSet bool
}

func (v NullableWealthWealthDistribution) Get() *WealthWealthDistribution {
	return v.value
}

func (v *NullableWealthWealthDistribution) Set(val *WealthWealthDistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableWealthWealthDistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableWealthWealthDistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWealthWealthDistribution(val *WealthWealthDistribution) *NullableWealthWealthDistribution {
	return &NullableWealthWealthDistribution{value: val, isSet: true}
}

func (v NullableWealthWealthDistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWealthWealthDistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


