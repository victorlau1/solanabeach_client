/*
Solanabeach Backend API

Solanabeach Backend REST API documentation.  ## Rate limiting Current API rate limit per IP is 100 requests per second.    ## Pagination Most of the endpoints returning array data support pagination. The API uses two types of pagination, depending on the returned data. Some endpoints support both, some are limited to just one type.    ## Supported pagination types ### Offset / limit Offset / limit pagination is the simplest form of pagination supported by the API. Offset parameter represents the number of results to skip before returning the data, and the limit parameter limits the number of returned results.   To prevent overloading the API, all limit params have a max value. Each API endpoint has its own max value.  ### Cursor Cursor pagination is more complex than the offset / limit one, but, it comes naturally for some blockchain data (such as blocks, transactions, token transfers, etc). Cursors contain data like blocknumber, transaction index, ... and they're described on their respective API endpoints. Limit parameter works exactly the same way as it does in the offset / limit pagination.  ## Authentication The public API uses a Bearer OAuth authentication method, and the API key should be provided in the `Authorization` header in each request. API keys are issued on request. 

API version: 0.0.1
Contact: andrej@vgng.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarketMeta struct for MarketMeta
type MarketMeta struct {
	Asks *Address `json:"asks,omitempty"`
	Bids *Address `json:"bids,omitempty"`
	BaseLotSize *string `json:"baseLotSize,omitempty"`
	QuoteLotSize *string `json:"quoteLotSize,omitempty"`
	BaseTokenDecimals *int32 `json:"baseTokenDecimals,omitempty"`
	QuoteTokenDecimals *int32 `json:"quoteTokenDecimals,omitempty"`
	BaseVault *Address `json:"baseVault,omitempty"`
	QuoteVault *Address `json:"quoteVault,omitempty"`
	Name *string `json:"name,omitempty"`
	MarketPrice *float32 `json:"marketPrice,omitempty"`
	OrderBooks *MarketMetaOrderBooks `json:"orderBooks,omitempty"`
	Liquidity *MarketMetaLiquidity `json:"liquidity,omitempty"`
	Volume *MarketMetaLiquidity `json:"volume,omitempty"`
	Volumes *[]float32 `json:"volumes,omitempty"`
	Volume24h *float32 `json:"volume24h,omitempty"`
}

// NewMarketMeta instantiates a new MarketMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketMeta() *MarketMeta {
	this := MarketMeta{}
	return &this
}

// NewMarketMetaWithDefaults instantiates a new MarketMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketMetaWithDefaults() *MarketMeta {
	this := MarketMeta{}
	return &this
}

// GetAsks returns the Asks field value if set, zero value otherwise.
func (o *MarketMeta) GetAsks() Address {
	if o == nil || o.Asks == nil {
		var ret Address
		return ret
	}
	return *o.Asks
}

// GetAsksOk returns a tuple with the Asks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetAsksOk() (*Address, bool) {
	if o == nil || o.Asks == nil {
		return nil, false
	}
	return o.Asks, true
}

// HasAsks returns a boolean if a field has been set.
func (o *MarketMeta) HasAsks() bool {
	if o != nil && o.Asks != nil {
		return true
	}

	return false
}

// SetAsks gets a reference to the given Address and assigns it to the Asks field.
func (o *MarketMeta) SetAsks(v Address) {
	o.Asks = &v
}

// GetBids returns the Bids field value if set, zero value otherwise.
func (o *MarketMeta) GetBids() Address {
	if o == nil || o.Bids == nil {
		var ret Address
		return ret
	}
	return *o.Bids
}

// GetBidsOk returns a tuple with the Bids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetBidsOk() (*Address, bool) {
	if o == nil || o.Bids == nil {
		return nil, false
	}
	return o.Bids, true
}

// HasBids returns a boolean if a field has been set.
func (o *MarketMeta) HasBids() bool {
	if o != nil && o.Bids != nil {
		return true
	}

	return false
}

// SetBids gets a reference to the given Address and assigns it to the Bids field.
func (o *MarketMeta) SetBids(v Address) {
	o.Bids = &v
}

// GetBaseLotSize returns the BaseLotSize field value if set, zero value otherwise.
func (o *MarketMeta) GetBaseLotSize() string {
	if o == nil || o.BaseLotSize == nil {
		var ret string
		return ret
	}
	return *o.BaseLotSize
}

// GetBaseLotSizeOk returns a tuple with the BaseLotSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetBaseLotSizeOk() (*string, bool) {
	if o == nil || o.BaseLotSize == nil {
		return nil, false
	}
	return o.BaseLotSize, true
}

// HasBaseLotSize returns a boolean if a field has been set.
func (o *MarketMeta) HasBaseLotSize() bool {
	if o != nil && o.BaseLotSize != nil {
		return true
	}

	return false
}

// SetBaseLotSize gets a reference to the given string and assigns it to the BaseLotSize field.
func (o *MarketMeta) SetBaseLotSize(v string) {
	o.BaseLotSize = &v
}

// GetQuoteLotSize returns the QuoteLotSize field value if set, zero value otherwise.
func (o *MarketMeta) GetQuoteLotSize() string {
	if o == nil || o.QuoteLotSize == nil {
		var ret string
		return ret
	}
	return *o.QuoteLotSize
}

// GetQuoteLotSizeOk returns a tuple with the QuoteLotSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetQuoteLotSizeOk() (*string, bool) {
	if o == nil || o.QuoteLotSize == nil {
		return nil, false
	}
	return o.QuoteLotSize, true
}

// HasQuoteLotSize returns a boolean if a field has been set.
func (o *MarketMeta) HasQuoteLotSize() bool {
	if o != nil && o.QuoteLotSize != nil {
		return true
	}

	return false
}

// SetQuoteLotSize gets a reference to the given string and assigns it to the QuoteLotSize field.
func (o *MarketMeta) SetQuoteLotSize(v string) {
	o.QuoteLotSize = &v
}

// GetBaseTokenDecimals returns the BaseTokenDecimals field value if set, zero value otherwise.
func (o *MarketMeta) GetBaseTokenDecimals() int32 {
	if o == nil || o.BaseTokenDecimals == nil {
		var ret int32
		return ret
	}
	return *o.BaseTokenDecimals
}

// GetBaseTokenDecimalsOk returns a tuple with the BaseTokenDecimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetBaseTokenDecimalsOk() (*int32, bool) {
	if o == nil || o.BaseTokenDecimals == nil {
		return nil, false
	}
	return o.BaseTokenDecimals, true
}

// HasBaseTokenDecimals returns a boolean if a field has been set.
func (o *MarketMeta) HasBaseTokenDecimals() bool {
	if o != nil && o.BaseTokenDecimals != nil {
		return true
	}

	return false
}

// SetBaseTokenDecimals gets a reference to the given int32 and assigns it to the BaseTokenDecimals field.
func (o *MarketMeta) SetBaseTokenDecimals(v int32) {
	o.BaseTokenDecimals = &v
}

// GetQuoteTokenDecimals returns the QuoteTokenDecimals field value if set, zero value otherwise.
func (o *MarketMeta) GetQuoteTokenDecimals() int32 {
	if o == nil || o.QuoteTokenDecimals == nil {
		var ret int32
		return ret
	}
	return *o.QuoteTokenDecimals
}

// GetQuoteTokenDecimalsOk returns a tuple with the QuoteTokenDecimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetQuoteTokenDecimalsOk() (*int32, bool) {
	if o == nil || o.QuoteTokenDecimals == nil {
		return nil, false
	}
	return o.QuoteTokenDecimals, true
}

// HasQuoteTokenDecimals returns a boolean if a field has been set.
func (o *MarketMeta) HasQuoteTokenDecimals() bool {
	if o != nil && o.QuoteTokenDecimals != nil {
		return true
	}

	return false
}

// SetQuoteTokenDecimals gets a reference to the given int32 and assigns it to the QuoteTokenDecimals field.
func (o *MarketMeta) SetQuoteTokenDecimals(v int32) {
	o.QuoteTokenDecimals = &v
}

// GetBaseVault returns the BaseVault field value if set, zero value otherwise.
func (o *MarketMeta) GetBaseVault() Address {
	if o == nil || o.BaseVault == nil {
		var ret Address
		return ret
	}
	return *o.BaseVault
}

// GetBaseVaultOk returns a tuple with the BaseVault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetBaseVaultOk() (*Address, bool) {
	if o == nil || o.BaseVault == nil {
		return nil, false
	}
	return o.BaseVault, true
}

// HasBaseVault returns a boolean if a field has been set.
func (o *MarketMeta) HasBaseVault() bool {
	if o != nil && o.BaseVault != nil {
		return true
	}

	return false
}

// SetBaseVault gets a reference to the given Address and assigns it to the BaseVault field.
func (o *MarketMeta) SetBaseVault(v Address) {
	o.BaseVault = &v
}

// GetQuoteVault returns the QuoteVault field value if set, zero value otherwise.
func (o *MarketMeta) GetQuoteVault() Address {
	if o == nil || o.QuoteVault == nil {
		var ret Address
		return ret
	}
	return *o.QuoteVault
}

// GetQuoteVaultOk returns a tuple with the QuoteVault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetQuoteVaultOk() (*Address, bool) {
	if o == nil || o.QuoteVault == nil {
		return nil, false
	}
	return o.QuoteVault, true
}

// HasQuoteVault returns a boolean if a field has been set.
func (o *MarketMeta) HasQuoteVault() bool {
	if o != nil && o.QuoteVault != nil {
		return true
	}

	return false
}

// SetQuoteVault gets a reference to the given Address and assigns it to the QuoteVault field.
func (o *MarketMeta) SetQuoteVault(v Address) {
	o.QuoteVault = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MarketMeta) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MarketMeta) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MarketMeta) SetName(v string) {
	o.Name = &v
}

// GetMarketPrice returns the MarketPrice field value if set, zero value otherwise.
func (o *MarketMeta) GetMarketPrice() float32 {
	if o == nil || o.MarketPrice == nil {
		var ret float32
		return ret
	}
	return *o.MarketPrice
}

// GetMarketPriceOk returns a tuple with the MarketPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetMarketPriceOk() (*float32, bool) {
	if o == nil || o.MarketPrice == nil {
		return nil, false
	}
	return o.MarketPrice, true
}

// HasMarketPrice returns a boolean if a field has been set.
func (o *MarketMeta) HasMarketPrice() bool {
	if o != nil && o.MarketPrice != nil {
		return true
	}

	return false
}

// SetMarketPrice gets a reference to the given float32 and assigns it to the MarketPrice field.
func (o *MarketMeta) SetMarketPrice(v float32) {
	o.MarketPrice = &v
}

// GetOrderBooks returns the OrderBooks field value if set, zero value otherwise.
func (o *MarketMeta) GetOrderBooks() MarketMetaOrderBooks {
	if o == nil || o.OrderBooks == nil {
		var ret MarketMetaOrderBooks
		return ret
	}
	return *o.OrderBooks
}

// GetOrderBooksOk returns a tuple with the OrderBooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetOrderBooksOk() (*MarketMetaOrderBooks, bool) {
	if o == nil || o.OrderBooks == nil {
		return nil, false
	}
	return o.OrderBooks, true
}

// HasOrderBooks returns a boolean if a field has been set.
func (o *MarketMeta) HasOrderBooks() bool {
	if o != nil && o.OrderBooks != nil {
		return true
	}

	return false
}

// SetOrderBooks gets a reference to the given MarketMetaOrderBooks and assigns it to the OrderBooks field.
func (o *MarketMeta) SetOrderBooks(v MarketMetaOrderBooks) {
	o.OrderBooks = &v
}

// GetLiquidity returns the Liquidity field value if set, zero value otherwise.
func (o *MarketMeta) GetLiquidity() MarketMetaLiquidity {
	if o == nil || o.Liquidity == nil {
		var ret MarketMetaLiquidity
		return ret
	}
	return *o.Liquidity
}

// GetLiquidityOk returns a tuple with the Liquidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetLiquidityOk() (*MarketMetaLiquidity, bool) {
	if o == nil || o.Liquidity == nil {
		return nil, false
	}
	return o.Liquidity, true
}

// HasLiquidity returns a boolean if a field has been set.
func (o *MarketMeta) HasLiquidity() bool {
	if o != nil && o.Liquidity != nil {
		return true
	}

	return false
}

// SetLiquidity gets a reference to the given MarketMetaLiquidity and assigns it to the Liquidity field.
func (o *MarketMeta) SetLiquidity(v MarketMetaLiquidity) {
	o.Liquidity = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *MarketMeta) GetVolume() MarketMetaLiquidity {
	if o == nil || o.Volume == nil {
		var ret MarketMetaLiquidity
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetVolumeOk() (*MarketMetaLiquidity, bool) {
	if o == nil || o.Volume == nil {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *MarketMeta) HasVolume() bool {
	if o != nil && o.Volume != nil {
		return true
	}

	return false
}

// SetVolume gets a reference to the given MarketMetaLiquidity and assigns it to the Volume field.
func (o *MarketMeta) SetVolume(v MarketMetaLiquidity) {
	o.Volume = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *MarketMeta) GetVolumes() []float32 {
	if o == nil || o.Volumes == nil {
		var ret []float32
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetVolumesOk() (*[]float32, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *MarketMeta) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []float32 and assigns it to the Volumes field.
func (o *MarketMeta) SetVolumes(v []float32) {
	o.Volumes = &v
}

// GetVolume24h returns the Volume24h field value if set, zero value otherwise.
func (o *MarketMeta) GetVolume24h() float32 {
	if o == nil || o.Volume24h == nil {
		var ret float32
		return ret
	}
	return *o.Volume24h
}

// GetVolume24hOk returns a tuple with the Volume24h field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketMeta) GetVolume24hOk() (*float32, bool) {
	if o == nil || o.Volume24h == nil {
		return nil, false
	}
	return o.Volume24h, true
}

// HasVolume24h returns a boolean if a field has been set.
func (o *MarketMeta) HasVolume24h() bool {
	if o != nil && o.Volume24h != nil {
		return true
	}

	return false
}

// SetVolume24h gets a reference to the given float32 and assigns it to the Volume24h field.
func (o *MarketMeta) SetVolume24h(v float32) {
	o.Volume24h = &v
}

func (o MarketMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Asks != nil {
		toSerialize["asks"] = o.Asks
	}
	if o.Bids != nil {
		toSerialize["bids"] = o.Bids
	}
	if o.BaseLotSize != nil {
		toSerialize["baseLotSize"] = o.BaseLotSize
	}
	if o.QuoteLotSize != nil {
		toSerialize["quoteLotSize"] = o.QuoteLotSize
	}
	if o.BaseTokenDecimals != nil {
		toSerialize["baseTokenDecimals"] = o.BaseTokenDecimals
	}
	if o.QuoteTokenDecimals != nil {
		toSerialize["quoteTokenDecimals"] = o.QuoteTokenDecimals
	}
	if o.BaseVault != nil {
		toSerialize["baseVault"] = o.BaseVault
	}
	if o.QuoteVault != nil {
		toSerialize["quoteVault"] = o.QuoteVault
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MarketPrice != nil {
		toSerialize["marketPrice"] = o.MarketPrice
	}
	if o.OrderBooks != nil {
		toSerialize["orderBooks"] = o.OrderBooks
	}
	if o.Liquidity != nil {
		toSerialize["liquidity"] = o.Liquidity
	}
	if o.Volume != nil {
		toSerialize["volume"] = o.Volume
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	if o.Volume24h != nil {
		toSerialize["volume24h"] = o.Volume24h
	}
	return json.Marshal(toSerialize)
}

type NullableMarketMeta struct {
	value *MarketMeta
	isSet bool
}

func (v NullableMarketMeta) Get() *MarketMeta {
	return v.value
}

func (v *NullableMarketMeta) Set(val *MarketMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketMeta(val *MarketMeta) *NullableMarketMeta {
	return &NullableMarketMeta{value: val, isSet: true}
}

func (v NullableMarketMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


